apply plugin: 'com.android.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def ndkDir = properties.getProperty('ndk.dir')
def valLayerBinDir = "${ndkDir}/sources/third_party/vulkan/src/build-android/jniLibs"

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    defaultConfig {
        applicationId "com.vulkan.tutorials.two"
        minSdkVersion 24
        targetSdkVersion 24
        versionCode = 1
        versionName = "0.0.1"
        externalNativeBuild {
            cmake {
                abiFilters "armeabi-v7a", 'arm64-v8a', 'x86', 'x86_64'
                arguments '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=c++_static'
            }
        }
    }
    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }
    }

    sourceSets {
        main {
            jniLibs {
              // Must have ndk-r12 or better which including layer binaries
              srcDirs = ["${valLayerBinDir}"]
            }
        }
    }

    buildTypes {
        release {
             minifyEnabled = false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
     }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}
